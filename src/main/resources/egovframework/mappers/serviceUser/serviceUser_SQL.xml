<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.user.service.impl.ServiceUserMapper">
  
  <select id="duplicatedEmailCheck" parameterType="hashMap" resultType="int">
  	/* 서비스 사용자 이메일 중복검사, serviceUser_SQL.duplicatedEmailCheck */
  	SELECT COUNT(*) FROM SERVICE_USER
  	WHERE EMAIL = #{email}
  </select>
  
   <select id="duplicatedNicknameCheck" parameterType="hashMap" resultType="int">
  	/* 서비스 사용자 닉네임 중복검사, serviceUser_SQL.duplicatedNicknameCheck */
  	SELECT COUNT(*) FROM SERVICE_USER
  	WHERE NICKNAME = #{nickname}
  </select>
  
  <insert id="signUpUser" parameterType="SignUpVO">
    <selectKey resultType="long" keyProperty="seq" order="BEFORE">
    	SELECT COALESCE(MAX(SEQ), 0)+1 FROM SERVICE_USER
    </selectKey>
    /* 서비스 사용자 회원가입, serviceUser_SQL.signUpUser */
  	INSERT INTO SERVICE_USER (
  		  SEQ
  		, NICKNAME
  		, EMAIL
  		, PASSWORD
  		, SALT
  		, NAME
  		, TEL
  		, GENDER
  		, CITY
  		, GRADE
  		, PWD_UPD_DT
  		, JOIN_DT
  	) VALUES (
  	      #{seq}
  		, #{nickname}
  		, #{email}
  		, #{password}
  		, #{salt}
  		, #{name}
  		, #{tel}
  		, #{gender}
  		, #{city}
  		, 'COM0000010'
  		, CURRENT_TIMESTAMP
  		, CURRENT_TIMESTAMP
  	)
  </insert>
  
  <select id="selectUserInfo" parameterType="hashMap" resultType="UserVO">
  	  /* 서비스 사용자 로그인정보 조회, serviceUser_SQL.selectUserInfo */
  	   	SELECT 
			  SEQ
			, NICKNAME
			, EMAIL
			, NAME
			, PASSWORD 
			, SALT
			, GENDER 
			, TEL
			, CITY
			, DISTRICT
			, GRADE
			, DEPOSIT 
			, AMOUNT
			, DEL_YN
			, PROFILE_IMAGE 
			, TO_CHAR(PWD_UPD_DT, 'YYYY-MM-DD HH24:MI:SS') AS PWD_UPD_DT
			, TO_CHAR(LOGIN_DT, 'YYYY-MM-DD HH24:MI:SS')   AS LOGIN_DT
			, TO_CHAR(JOIN_DT, 'YYYY-MM-DD HH24:MI:SS')    AS JOIN_DT
		FROM SERVICE_USER 
		WHERE EMAIL = #{email}
  </select>
  
  <update id="updateUserInfo" parameterType="hashMap">
    /* 서비스 사용자 프로필 수정, serviceUser_SQL.updateUserInfo */
  	UPDATE SERVICE_USER SET
  		NICKNAME 	  = #{nickname}
  	  , GENDER   	  = #{gender}
  	  , TEL		 	  = #{tel}
  	  , CITY	 	  = #{city}
  	  , DISTRICT  	  = #{district}
  	  <if test="profileImage != null and profileImage != ''">
  	  	, PROFILE_IMAGE = #{profileImage}
  	  </if>
  	WHERE SEQ		  = #{seq}::INTEGER
  </update>
  
</mapper>